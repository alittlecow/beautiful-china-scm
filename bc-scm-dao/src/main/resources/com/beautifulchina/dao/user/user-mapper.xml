<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.beautifulchina.dao.user.UserMapper" >
    <!--
        可用的收回策略(eviction)有：
        LRU –  最近最少使用的：移除最长时间不被使用的对象。
        FIFO –  先进先出：按对象进入缓存的顺序来移除它们。
        SOFT –  软引用：移除基于垃圾回收器状态和软引用规则的对象。
        WEAK –  弱引用：更积极地移除基于垃圾收集器状态和弱引用规则的对象。
        默认的是 LRU。
        flushInterval（刷新间隔）可以被设置为任意的正整数，而且它们代表一个合理的毫秒形式的时间段。默认情况是不设置，也就是没有刷新间隔，
        缓存仅仅调用语句时刷新。
        size（引用数目）可以被设置为任意正整数，要记住你缓存的对象数目和你运行环境的可用内存资源数目。默认值1024。
        readOnly（只读）属性可以被设置为 true 或 false。只读的缓存会给所有调用者返回缓存对象的相同实例。因此这些对象不能被修改。
        这提供了很重要的性能优势。可读写的缓存会返回缓存对象的拷贝（通过序列化）。这会慢一些，但是安全，因此默认是false。
    -->
    <!--<cache eviction="FIFO" flushInterval="" readOnly="" size="" type=""></cache>-->

    <resultMap id="user" type="com.beautifulchina.pojo.user.User" >
        <id column="user_id" property="userId" jdbcType="CHAR" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="user_birthday" property="userBirthday" jdbcType="DATE" />
        <result column="user_salary" property="userSalary" jdbcType="DOUBLE" />
    </resultMap>

    <sql id="Base_Column_List" >
        user_id, user_name, user_birthday, user_salary
    </sql>
    <select id="selectByPrimaryKey" resultMap="user" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from t_user
        where user_id = #{userId}
    </select>

    <insert id="insert" parameterType="userBO" >
        insert into t_user (user_id,
                            user_name,
                            user_birthday,
                            user_salary)
                            values (#{userId},
                            #{userName},
                            #{userBirthday},
                            #{userSalary})
    </insert>


</mapper>